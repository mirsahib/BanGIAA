{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport colors from \"../assets/colors/colors\";\nimport { Camera } from 'expo-camera';\nexport default function CameraScreen() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasCameraPermission = _useState2[0],\n      setCameraPermission = _useState2[1];\n\n  useEffect(function _callee() {\n    var _await$Camera$request, status;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Camera.requestPermissionsAsync());\n\n          case 2:\n            _await$Camera$request = _context.sent;\n            status = _await$Camera$request.status;\n            setCameraPermission(status === 'granted');\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, null, \"Camera\"));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: colors.primary,\n    fontFamily: 'Poppins',\n    fontWeight: 'bold',\n    paddingTop: Platform.OS === 'android' ? 25 : 0\n  }\n});","map":{"version":3,"sources":["/home/mirsahib/Desktop/BanGIAA/component/Camera.js"],"names":["React","useState","useEffect","colors","Camera","CameraScreen","hasCameraPermission","setCameraPermission","requestPermissionsAsync","status","styles","container","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","primary","fontFamily","fontWeight","paddingTop","Platform","OS"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;;;;;AAEA,OAAOC,MAAP;AACA,SAASC,MAAT,QAAuB,aAAvB;AAGA,eAAe,SAASC,YAAT,GAAwB;AACnC,kBAAkDJ,QAAQ,CAAC,IAAD,CAA1D;AAAA;AAAA,MAAOK,mBAAP;AAAA,MAA2BC,mBAA3B;;AAEAL,EAAAA,SAAS,CAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACiBE,MAAM,CAACI,uBAAP,EADjB;;AAAA;AAAA;AACCC,YAAAA,MADD,yBACCA,MADD;AAENF,YAAAA,mBAAmB,CAACE,MAAM,KAAG,SAAV,CAAnB;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAGP,EAHO,CAAT;AAKA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACI,oBAAC,IAAD,iBADJ,CADJ;AAKH;AAED,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,eAAe,EAAEd,MAAM,CAACe,OAJjB;AAKPC,IAAAA,UAAU,EAAE,SALL;AAMPC,IAAAA,UAAU,EAAE,MANL;AAOPC,IAAAA,UAAU,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,EAA5B,GAAiC;AAPtC;AADkB,CAAlB,CAAf","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport { StyleSheet,Text,Platform, View} from 'react-native';\nimport colors from '../assets/colors/colors';\nimport { Camera } from 'expo-camera';\n\n\nexport default function CameraScreen() {\n    const [hasCameraPermission,setCameraPermission] = useState(null)\n\n    useEffect(async ()=>{\n        const {status} = await Camera.requestPermissionsAsync()\n        setCameraPermission(status==='granted')\n    },[])\n\n    return (\n        <View style={styles.container}>\n            <Text>Camera</Text>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: colors.primary,\n        fontFamily: 'Poppins',\n        fontWeight: 'bold',\n        paddingTop: Platform.OS === 'android' ? 25 : 0\n    },\n});"]},"metadata":{},"sourceType":"module"}