{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport colors from \"../assets/colors/colors\";\nimport { Camera } from 'expo-camera';\nexport default function CameraScreen() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasCameraPermission = _useState2[0],\n      setCameraPermission = _useState2[1];\n\n  var _useState3 = useState(Camera.Constants.Type.back),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  useEffect(function _callee() {\n    var _await$Camera$request, status;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Camera.requestPermissionsAsync());\n\n          case 2:\n            _await$Camera$request = _context.sent;\n            status = _await$Camera$request.status;\n            setCameraPermission(status === 'granted');\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Camera, {\n    style: styles.camera,\n    type: type\n  }, React.createElement(View, {\n    style: styles.buttonContainer\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n    }\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \" Flip \")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: colors.primary,\n    fontFamily: 'Poppins',\n    fontWeight: 'bold',\n    paddingTop: Platform.OS === 'android' ? 25 : 0\n  },\n  camera: {\n    flex: 1\n  },\n  buttonContainer: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    flexDirection: 'row',\n    margin: 20\n  }\n});","map":{"version":3,"sources":["/home/mirsahib/Desktop/BanGIAA/component/CameraScreen.js"],"names":["React","useState","useEffect","colors","Camera","CameraScreen","hasCameraPermission","setCameraPermission","Constants","Type","back","type","setType","requestPermissionsAsync","status","styles","container","camera","buttonContainer","button","front","text","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","primary","fontFamily","fontWeight","paddingTop","Platform","OS","flexDirection","margin"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAEA,OAAOC,MAAP;AACA,SAASC,MAAT,QAAuB,aAAvB;AAGA,eAAe,SAASC,YAAT,GAAwB;AACnC,kBAAmDJ,QAAQ,CAAC,IAAD,CAA3D;AAAA;AAAA,MAAOK,mBAAP;AAAA,MAA4BC,mBAA5B;;AACA,mBAAwBN,QAAQ,CAACG,MAAM,CAACI,SAAP,CAAiBC,IAAjB,CAAsBC,IAAvB,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAGAV,EAAAA,SAAS,CAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACmBE,MAAM,CAACS,uBAAP,EADnB;;AAAA;AAAA;AACEC,YAAAA,MADF,yBACEA,MADF;AAENP,YAAAA,mBAAmB,CAACO,MAAM,KAAK,SAAZ,CAAnB;;AAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAGN,EAHM,CAAT;AAKA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAED,MAAM,CAACE,MAAtB;AAA8B,IAAA,IAAI,EAAEN;AAApC,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACG;AAApB,KACI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAEH,MAAM,CAACI,MADlB;AAEI,IAAA,OAAO,EAAE,mBAAM;AACXP,MAAAA,OAAO,CACHD,IAAI,KAAKP,MAAM,CAACI,SAAP,CAAiBC,IAAjB,CAAsBC,IAA/B,GACMN,MAAM,CAACI,SAAP,CAAiBC,IAAjB,CAAsBW,KAD5B,GAEMhB,MAAM,CAACI,SAAP,CAAiBC,IAAjB,CAAsBC,IAHzB,CAAP;AAKH;AARL,KASI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACM;AAApB,cATJ,CADJ,CADJ,CADJ,CADJ;AAoBH;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,SAAS,EAAE;AACPQ,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,eAAe,EAAExB,MAAM,CAACyB,OAJjB;AAKPC,IAAAA,UAAU,EAAE,SALL;AAMPC,IAAAA,UAAU,EAAE,MANL;AAOPC,IAAAA,UAAU,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,EAA5B,GAAiC;AAPtC,GADkB;AAU7BhB,EAAAA,MAAM,EAAE;AACJO,IAAAA,IAAI,EAAE;AADF,GAVqB;AAa7BN,EAAAA,eAAe,EAAE;AACbM,IAAAA,IAAI,EAAE,CADO;AAEbG,IAAAA,eAAe,EAAE,aAFJ;AAGbO,IAAAA,aAAa,EAAE,KAHF;AAIbC,IAAAA,MAAM,EAAE;AAJK;AAbY,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, Platform, View,TouchableOpacity } from 'react-native';\nimport colors from '../assets/colors/colors';\nimport { Camera } from 'expo-camera';\n\n\nexport default function CameraScreen() {\n    const [hasCameraPermission, setCameraPermission] = useState(null)\n    const [type, setType] = useState(Camera.Constants.Type.back);\n\n\n    useEffect(async () => {\n        const { status } = await Camera.requestPermissionsAsync()\n        setCameraPermission(status === 'granted')\n    }, [])\n\n    return (\n        <View style={styles.container}>\n            <Camera style={styles.camera} type={type}>\n                <View style={styles.buttonContainer}>\n                    <TouchableOpacity\n                        style={styles.button}\n                        onPress={() => {\n                            setType(\n                                type === Camera.Constants.Type.back\n                                    ? Camera.Constants.Type.front\n                                    : Camera.Constants.Type.back\n                            );\n                        }}>\n                        <Text style={styles.text}> Flip </Text>\n                    </TouchableOpacity>\n                </View>\n            </Camera>\n\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: colors.primary,\n        fontFamily: 'Poppins',\n        fontWeight: 'bold',\n        paddingTop: Platform.OS === 'android' ? 25 : 0\n    },\n    camera: {\n        flex: 1,\n    },\n    buttonContainer: {\n        flex: 1,\n        backgroundColor: 'transparent',\n        flexDirection: 'row',\n        margin: 20,\n    },\n});"]},"metadata":{},"sourceType":"module"}